Arquivo: Arquivo é o conjunto de dados em que um indivíduo nomeia. É uma sequência binária.
Arquivo de texto: O arquivo de texto é uma letra gerada ao arquivo de texto, a cada sequência de 8 binários. Esses arquivos permitem a comunicação entre os sistemas.
Variável: É um nome que recebe um determinado valor, que ao mesmo tempo é um espaço na memória.
Servidor: Servidor pode ser caracterizado como um sistema computacional, virtual ou físico que tem em sua composição um hardware e um software, com a função de atender solicitações e prestar serviçõs para diferentes dispositivos, por exemplo computadores clientes.

2 TRABALHO
A relação está principalmente no fato de que, com o surgimento da LGPD, o setor de Data Centers passa a ter que cumprir com certas exigências com relação ao tratamento adequado dos dados da população, haja vista que o mesmo também é responsável por armazenar dados. Nesse sentido, é primordial a proteção e segurança dos dados por parte dos Data Centers, respeitando todas as exigências da LGPD que busca justamente a garantia da segurança dos dados de cada indivíduo.
Formatos abertos é uma especificação técnica utilizada para armazenamento de dados digitais, sem qualquer restrição legal para uso. Portanto, aqui nos formatos abertos, é possível acessar os dados no futuro, e não permite que apenas um único fabricante detenha controle de um formato proprietário. Temos como exemplo o HTML5, desenvolvido de forma transparente e coletivo. Já no formato proprietário, estamos falando do interesse privado, portanto, as informações que estão armazenadas no software podem ser perdidas em caso de descontinuação do mesmo. Temos como exemplo: DWG; SWF;DOC;PPT...
Nesse caso, apesar dos dados serem públicos, eles devem ser tratados com cuidado, isso porque os dados não podem comprometer a privacidade das pessoas, principalmente com relação a informações sensíveis. As pessoas devem ser protegidas de situações como roubo de identidade e divulgação de informações confidenciais. Nesse sentido surge a LGPD buscando garantir a segurança dos dados da população. Dado público não significa dado sem pertencimento e não significa dado de domínio público. 

3 TRABALHO
1.	Python:
Python é uma linguagem de programação de alto nível, conhecida por sua sintaxe simples e legível.
Essa linguagem é amplamente utilizada em desenvolvimento web, ciência de dados, automação de tarefas e inteligência artificial.
Além disso, suporta múltiplos paradigmas de programação, incluindo orientação a objetos, imperativo e funcional.

>>> numero1 = 10
>>> numero2 = 20
>>> soma = numero1 + numero2
>>> print("A soma é:",soma)
A soma é: 30

2.	Ruby:
É conhecido como uma linguagem "orientada à felicidade do programador", onde a facilidade de uso e a expressividade são prioridades. 
Possui uma sintaxe mais concisa e expressiva, enfatizando a legibilidade e a felicidade do programador. Usa palavras-chave em inglês e tem uma forte influência da linguagem natural.
A linguagem ainda possui um recurso de metaprogramação, permitindo que os programas modifiquem e estendam a si mesmos em tempo de execução.

puts "Fluminense"
Fluminense

3.	JavaScript:
JavaScript é uma linguagem de programação de alto nível, interpretada e amplamente utilizada no desenvolvimento web.
É usada tanto para interações em páginas web quanto no lado do cliente (navegador) e ainda no lado do servidor (Node.js).
Além disso, é essencial para criar páginas web interativas e dinâmicas, além de aplicativos web full-stack e aplicativos móveis.

var numero1 = 20
var numero2 = 40
var soma = numero1 + numero2
console.log("A soma é:", soma)
console.log("Fluminense")
A soma é: 60
Fluminense

QUARTO TRABALHO
Código de estrutura de repetição,
Estrutura de repetição loop for: 
for i in range(1, 14):
    print(i)
  
2
3
4
5
6
7
8
9
10
11
12
13

Código de estrutura de repetição loop while:
i = 10
while i <= 20:
    print(i)
    i += 1
10
11
12
13
14
15
16
17
18
19
20
Código de estrutura de tomada de decisão (if-else):
idade = 17
if idade < 18:
    print("Você é menor de idade.")
elif idade >= 18 and idade < 65:
    print("Você é um adulto.")
else:
    print("Você é um idoso.")
Você é menor de idade.

QUINTO TRABALHO

Algoritmo de ordenação Bubble Sort:

# Bubble Sort
def bubble_sort(arr):
    n = len(arr)
    # Percorre todos os elementos do array
    for i in range(n):
        # Últimos i elementos estão no lugar certo
        for j in range(0, n-i-1):
            # Troca se o elemento encontrado for maior que o próximo elemento
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]

# Teste do Bubble Sort
arr = [411, 760, 2022, 3, 22, 41, 213]
bubble_sort(arr)
print("Array ordenado usando Bubble Sort:")
for i in range(len(arr)):
    print("%d" % arr[i], end=" ")
print("\n")

Array ordenado usando Bubble Sort:
3 22 41 213 411 760 2022 

[Execution complete with exit code 0]

Algorítimo que imprima apenas as vogais de uma determinada palavra ou frase:

# Imprimir apenas vogais de uma palavra ou frase
def imprimir_vogais(texto):
    vogais = "aeiouAEIOU"
    resultado = ""
    for letra in texto:
        if letra in vogais:
            resultado += letra
    return resultado

# Teste para imprimir vogais
palavra = "Fluminense Football Club"
print("Vogais na palavra/frase:", imprimir_vogais(palavra))

Vogais na palavra/frase: uieeooau

[Execution complete with exit code 0]

SEXTO TRABALHO

numeros = [20, 40, 60, 80]
frase = "Fluminense é gigante"
palavra = "Python"

media = sum(numeros) / len(numeros)
print("Média aritmética dos números:", media)

num_quadrado = numeros[0]
quadrado = num_quadrado ** 2
print("Quadrado de", num_quadrado, ":", quadrado)

num_dobro = numeros[1]
dobro = num_dobro * 2
print("Dobro de", num_dobro, ":", dobro)

qtd_letras = len(palavra)
print("Quantidade de letras na palavra:", qtd_letras)

qtd_espacos = frase.count(' ')
print("Quantidade de espaços em branco na frase:", qtd_espacos)

primeiro_numero = numeros[0]
segundo_numero = numeros[1]
if primeiro_numero > segundo_numero:
    print("O primeiro número é maior que o segundo.")
else:
    print("O primeiro número não é maior que o segundo.")

maior_numero = max(numeros)
print("O maior número é:", maior_numero)

Média aritmética dos números: 50.0
Quadrado de 60 : 3600
Dobro de 40 : 80
Quantidade de letras na palavra: 6
Quantidade de espaços em branco na frase: 2
O primeiro número não é maior que o segundo.
O maior número é: 80

SÉTIMO TRABALHO

def soma_media(lista):
    soma = sum(lista)
    media = soma / len(lista)
    return soma, media

def substituir_palavra(lista, palavra_antiga, palavra_nova):
    nova_lista = [palavra_nova if palavra == palavra_antiga else palavra for palavra in lista]
    return nova_lista

def gerar_triangulo(num_linhas):
    for i in range(1, num_linhas + 1):
        print('*' * i)

    
lista_numeros = [10, 20, 30, 40]
soma, media = soma_media(lista_numeros)
print("Soma:", soma)
print("Média:", media)

lista_palavras = ["Fluminense", "Football", "Club"]
palavra_antiga = "Fluminense"
palavra_nova = "Fluzão"
nova_lista_palavras = substituir_palavra(lista_palavras, palavra_antiga, palavra_nova)
print("Lista alterada:", nova_lista_palavras)

num_linhas = 10
print("Triângulo de asteriscos:")
gerar_triangulo(num_linhas)

Soma: 100
Média: 25.0
Lista alterada: ['Fluzão', 'Football', 'Club']
Triângulo de asteriscos:
*
**
***
****
*****
******
*******
********
*********
**********

OITAVO TRABALHO

1) Crie uma função que imprima as informações de três parâmetros:
nome, idade, e cidade, de maneira formatada. Use os argumentos
sep e end da função print( ) para organizar a saída.
Exemplo Saída:
Nome: Alice - Idade: 25 - Cidade: São Paulo!

def imprimir_informacoes(nome, idade, cidade):
    print("Nome:", nome, "-", "Idade:", idade, "-", "Cidade:", cidade, end="!\n")


imprimir_informacoes("Murilo", 21, "Rio de Janeiro")

==================== RESTART: C:/Users/202102468728/trab1.py ===================
Nome: Murilo - Idade: 21 - Cidade: Rio de Janeiro!


2) Escreva uma função que peça ao usuário dois números e a
operação desejada ('+', '-', '*' ou '/'). Sua função deve calcular e
imprimir o resultado da operação especificada.

def calcular(num1, num2, operacao):
    
    if operacao == '+':
        resultado = num1 + num2
    elif operacao == '-':
        resultado = num1 - num2
    elif operacao == '*':
        resultado = num1 * num2
    elif operacao == '/':
        
        if num2 != 0:
            resultado = num1 / num2
        else:
            print("Erro: Divisão por zero!")
            return None
    else:
        print("Operação inválida!")
        return None

    return resultado


num1 = 100
num2 = 2
operacao = '*'

resultado = calcular(num1, num2, operacao)
if resultado is not None:
    print("Resultado:", resultado)

==================== RESTART: C:/Users/202102468728/trab1.py ===================
Resultado: 200

3) Crie uma função que peça ao usuário para digitar itens de uma lista
de compras, separados por vírgula. Armazene esses itens em uma
lista e, ao final, imprima todos os itens em linhas separadas usando
um laço.

import random

def criar_lista_compras():
    
    possiveis_itens = ["leite", "ovos", "pão", "manteiga", "queijo", "arroz", "feijão", "macarrão", "frango", "carne"]

    
    lista_compras = random.sample(possiveis_itens, random.randint(1, len(possiveis_itens)))

    
    for i, item in enumerate(lista_compras, start=1):
        print("Item {}: {}".format(i, item))


criar_lista_compras()

==================== RESTART: C:/Users/202102468728/trab1.py ===================
Item 1: leite
Item 2: macarrão
Item 3: queijo
Item 4: ovos
Item 5: feijão
Item 6: frango

4) Faça uma função que solicite ao usuário a temperatura em graus
Celsius, converta-a para Fahrenheit e imprima o resultado. A
fórmula de conversão é: (Celsius * 9/5) + 32.


def celsius_para_fahrenheit(celsius):
   
    fahrenheit = (celsius * 9/5) + 32

    
    return fahrenheit


celsius = 20
resultado = celsius_para_fahrenheit(celsius)
print("A temperatura de", celsius, "graus Celsius é equivalente a", resultado, "graus Fahrenheit.")

==================== RESTART: C:/Users/202102468728/trab1.py ===================
A temperatura de 20 graus Celsius é equivalente a 68.0 graus Fahrenheit.




5) Escreva uma função que continue a pedir a ousuario para digitar nomes até que o nome "sair" seja digitado. 
Ao final, o programa deve imprimir todos os nomes digitados, cada um em uma linha.


def pedir_nomes():
    nomes = []
    while True:
        nome = input("Nathan(ou 'sair' para sair): ")
        if nome.lower() == 'sair':
            break
        nomes.append(nome)
    
    print("Nomes digitados:")
    for nome in nomes:
        print(nome)


pedir_nomes()

Digite um nome (ou 'sair' para sair): 
==================== RESTART: C:/Users/202102468728/trab1.py ===================
Digite um nome (ou 'sair' para sair): 
==================== RESTART: C:/Users/202102468728/trab1.py ===================
Murilo (ou 'sair' para sair): 
==================== RESTART: C:/Users/202102468728/trab1.py ===================
Kadu(ou 'sair' para sair): 
==================== RESTART: C:/Users/202102468728/trab1.py ===================
Medina(ou 'sair' para sair): 
==================== RESTART: C:/Users/202102468728/trab1.py ===================
Nathan(ou 'sair' para sair): 

NONO TRABALHO

Escreva uma função que pede que o usuário informe seu nome pelo 
teclado e grave essa informação em um arquivo de texto

def gravar_nome_em_arquivo():
    nome = input("Digite seu nome: ")
    with open("nome.txt", "w") as arquivo:
        arquivo.write(nome)

# Exemplo de uso da função
gravar_nome_em_arquivo()

================== RESTART: C:/Users/202102468728/aulanove.py ==================
Digite seu nome: 

2) Escreva uma função que peça ao usuário o nome de um arquivo de 
texto e imprima o seu conteúdo. Obs.: considere que o usuário 
sempre informa o nome de um arquivo que existente.

def imprimir_conteudo_do_arquivo():
    nome_arquivo = input("Digite o nome do arquivo de texto: ")
    with open(nome_arquivo, "r") as arquivo:
        conteudo = arquivo.read()
        print("Conteúdo do arquivo", nome_arquivo + ":")
        print(conteudo)

imprimir_conteudo_do_arquivo()

================== RESTART: C:/Users/202102468728/aulanove.py ==================
Digite o nome do arquivo de texto: 

3) Escreva uma função que leia o conteúdo do arquivo de exemplo e o 
escreva em um novo arquivo

def copiar_conteudo_do_arquivo():
    
    nome_arquivo_origem = "novo_arquivo.txt"


    nome_arquivo_destino = "novo_arquivo1.txt"

    try:
        
        with open(nome_arquivo_origem, "r") as arquivo_origem:
           
            conteudo = arquivo_origem.read()

            
            with open(nome_arquivo_destino, "w") as arquivo_destino:
                
                arquivo_destino.write(conteudo)

        print("Conteúdo copiado com sucesso para", nome_arquivo_destino)

    except FileNotFoundError:
        print("O arquivo de exemplo não foi encontrado.")
    except Exception as e:
        print("Ocorreu um erro ao copiar o conteúdo:", e)


copiar_conteudo_do_arquivo()

================== RESTART: C:/Users/202102468728/aulanove.py ==================
Conteúdo copiado com sucesso para novo_arquivo1.txt


Escreva uma função que peça ao usuário um número, percorra o 
arquivo de exemplo, e escreva na tela o nome correspondente ao 
número

ef encontrar_nome_por_numero():
    numero_procurado = input("Digite um número: ")

    try:
        with open("novo_arquivo1.txt", "r") as arquivo:
            linhas = arquivo.readlines()

            encontrado = False
            for linha in linhas:
                partes = linha.strip().split(",")
                if partes[0] == numero_procurado:
                    print("O nome correspondente ao número", numero_procurado, "é:", partes[1])
                    encontrado = True
                    break

            if not encontrado:
                print("Número não encontrado no arquivo.")

    except FileNotFoundError:
        print("O arquivo de exemplo não foi encontrado.")
    except Exception as e:
        print("Ocorreu um erro ao procurar o número:", e)

encontrar_nome_por_numero()

============= RESTART: C:/Users/202102468728/Downloads/aulanovee.py ============
Digite um número: 






